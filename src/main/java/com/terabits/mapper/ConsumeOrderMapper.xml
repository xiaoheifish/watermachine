<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org/DTD Mapper 3.0" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.terabits.mapper.ConsumeOrderMapper">

    <!-- 自定义返回结果集 -->
    <resultMap id="consumeOrderMap" type="com.terabits.meta.po.ConsumeOrderPO">
        <id property="id" column="id" javaType="java.lang.Integer"></id>
        <result property="orderNo" column="orderno" javaType="java.lang.String"></result>
        <result property="openId" column="openid" javaType="java.lang.String"></result>
        <result property="displayId" column="displayid" javaType="java.lang.String"></result>
        <result property="payment" column = "payment" javaType="java.lang.Double"></result>
        <result property="flow" column="flow" javaType="java.lang.Double"></result>
        <result property="gmtCreate" column="gmtcreate" javaType="java.lang.String"></result>
        <result property="gmtModified" column="gmtmodified" javaType="java.lang.String"></result>
        <result property="state" column="state" javaType="java.lang.Integer"></result>
    </resultMap>

    <!-- 在各种标签中的id属性必须和接口中的方法名相同 ， id属性值必须是唯一的，不能够重复使用。parameterType属性指明查询时使用的参数类型，resultType属性指明查询返回的结果集类型-->
    <!-- useGeneratedKeys：（ 仅 对 insert 有 用 ） 这 会 告 诉 MyBatis 使 用 JDBC 的getGeneratedKeys
                方法来取出由数据（比如：像 MySQL 和 SQLServer 这样的数据库管理系统的自动递增字段）内部生成的主键。默认值： false。 -->
    <!--keyProperty： （仅对 insert有用）标记一个属性， MyBatis 会通过 getGeneratedKeys或者通过 insert 语句的 selectKey 子元素设置它的值。默认：不设置。 -->
    <!--#{}中的内容，为占位符，当参数为某个JavaBean时，表示放置该Bean对象的属性值  -->

    <insert id="insertOrder" useGeneratedKeys="true" keyProperty="id" parameterType="com.terabits.meta.po.ConsumeOrderPO">
        insert into consumeorder (state, orderno, openid, displayid, payment, flow, gmtcreate, gmtmodified)
        values (23, #{orderNo}, #{openId}, #{displayId}, #{payment}, #{flow}, now(), now())
    </insert>

    <select id="selectCountByTime" parameterType="com.terabits.meta.bo.TimeSpanBO" resultType="java.lang.Integer">
        select count(*) from consumeorder
        <where>
            <if test = "beginTime != null and beginTime != ''">
                and gmtcreate >= #{beginTime}
            </if>
            <if test = "endTime != null and endTime != ''">
                and gmtcreate &lt; #{endTime}
            </if>
        </where>
    </select>

    <select id="selectAllConsumption" parameterType="com.terabits.meta.bo.TimeSpanBO" resultMap="consumeOrderMap">
        select * from consumeorder
        <where>
            <if test="beginTime != null and beginTime != ''">
                and gmtcreate >= #{beginTime}
            </if>
            <if test="endTime != null and endTime != ''">
                and gmtcreate &lt; #{endTime}
            </if>
        </where>
    </select>

    <select id="selectConsumptionByDisplayId" parameterType="String" resultMap="consumeOrderMap">
        select * from consumeorder where displayid = #{displayId}
    </select>

    <select id="selectLastConsumption" parameterType="String" resultMap="consumeOrderMap">
        select * from consumeorder where displayid = #{displayId} order by gmtcreate desc limit 1
    </select>

    <select id="selectConsumptionByOpenId" parameterType="String" resultMap="consumeOrderMap">
        select * from consumeorder where openid = #{openId} and state = 66 order by gmtcreate desc
    </select>

    <update id="updateStateById" parameterType="String">
        update consumeorder set state = 66, gmtmodified = now() where orderno = #{orderNo}
    </update>

    <update id = "updateOrderNoById">
        update consumeorder set orderno = #{orderNo} where id = #{id}
    </update>
</mapper>

